<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="com.springboot.hello.SpringBootHelloWorld"/>
<fullyQualifiedTypeName name="com.springcloud.main.ProductMainEntryPoint"/>
<fullyQualifiedTypeName name="java.lang.Boolean"/>
<fullyQualifiedTypeName name="com.springcloud.main.service.ProductService"/>
<fullyQualifiedTypeName name="com.springcloud.main.dao.ProductDao"/>
<fullyQualifiedTypeName name="java.lang.Long"/>
<fullyQualifiedTypeName name="com.springcloud.main.repository.ProductRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
<fullyQualifiedTypeName name="com.springcloud.main.EurekaServerEntryPoint"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.SpringCloudApplication"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
<fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
<fullyQualifiedTypeName name="com.springcloud.main.InventoryEntryPoint"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.domain.EntityScan"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
<fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="com.springcloud.main.service.InventoryService"/>
<fullyQualifiedTypeName name="com.springcloud.main.dao.InventoryDao"/>
<fullyQualifiedTypeName name="com.springcloud.main.repository.InventoryRepository"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="com.springcloud.main.entity.InventoryEntity"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="lombok.Data"/>
<fullyQualifiedTypeName name="com.springcloud.main.entity.InventoryResponse"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
<fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
<fullyQualifiedTypeName name="com.springcloud.main.entity.ProductEntity"/>
<fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixProperty"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
<fullyQualifiedTypeName name="com.netflix.ribbon.proxy.annotation.Hystrix"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
<fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
<fullyQualifiedTypeName name="org.springframework.cloud.context.config.annotation.RefreshScope"/>
</qualifiedTypeNameHistroy>
